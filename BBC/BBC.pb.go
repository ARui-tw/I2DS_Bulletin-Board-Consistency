// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: BBC/BBC.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{0}
}

type ACK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ACK) Reset() {
	*x = ACK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACK) ProtoMessage() {}

func (x *ACK) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACK.ProtoReflect.Descriptor instead.
func (*ACK) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{1}
}

func (x *ACK) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{2}
}

func (x *Content) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	NodeID   uint32 `protobuf:"varint,2,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	ParentID uint32 `protobuf:"varint,3,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Node) GetNodeID() uint32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *Node) GetParentID() uint32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

type Nodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
}

func (x *Nodes) Reset() {
	*x = Nodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nodes) ProtoMessage() {}

func (x *Nodes) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nodes.ProtoReflect.Descriptor instead.
func (*Nodes) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{4}
}

func (x *Nodes) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type IDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID []uint32 `protobuf:"varint,1,rep,packed,name=NodeID,proto3" json:"NodeID,omitempty"`
}

func (x *IDs) Reset() {
	*x = IDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDs) ProtoMessage() {}

func (x *IDs) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDs.ProtoReflect.Descriptor instead.
func (*IDs) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{5}
}

func (x *IDs) GetNodeID() []uint32 {
	if x != nil {
		return x.NodeID
	}
	return nil
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID uint32 `protobuf:"varint,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{6}
}

func (x *ID) GetNodeID() uint32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

type ReadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []string `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty"`
	Data    []uint32 `protobuf:"varint,2,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadResult) Reset() {
	*x = ReadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BBC_BBC_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResult) ProtoMessage() {}

func (x *ReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_BBC_BBC_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResult.ProtoReflect.Descriptor instead.
func (*ReadResult) Descriptor() ([]byte, []int) {
	return file_BBC_BBC_proto_rawDescGZIP(), []int{7}
}

func (x *ReadResult) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ReadResult) GetData() []uint32 {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_BBC_BBC_proto protoreflect.FileDescriptor

var file_BBC_BBC_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x42, 0x42, 0x43, 0x2f, 0x42, 0x42, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x42, 0x42, 0x43, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x0a,
	0x03, 0x41, 0x43, 0x4b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x23,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x05, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x22, 0x1c, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x22, 0x3a, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xb7, 0x01, 0x0a,
	0x08, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x0c, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a,
	0x08, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x41, 0x43, 0x4b, 0x22, 0x00, 0x12, 0x25, 0x0a, 0x04, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0f, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x21, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x12, 0x07, 0x2e, 0x42,
	0x42, 0x43, 0x2e, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x09,
	0x2e, 0x42, 0x42, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x08, 0x2e, 0x42, 0x42, 0x43, 0x2e,
	0x41, 0x43, 0x4b, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x09, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x08, 0x2e, 0x42, 0x42, 0x43,
	0x2e, 0x41, 0x43, 0x4b, 0x22, 0x00, 0x32, 0x49, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x1f, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x42, 0x42, 0x43, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x07, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x49, 0x44,
	0x22, 0x00, 0x12, 0x1d, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x09, 0x2e, 0x42, 0x42,
	0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x07, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x49, 0x44, 0x22,
	0x00, 0x32, 0xb5, 0x01, 0x0a, 0x06, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x04,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x1a, 0x08, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x41, 0x43, 0x4b, 0x22, 0x00, 0x12, 0x25,
	0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x12,
	0x07, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x09, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x08, 0x2e, 0x42,
	0x42, 0x43, 0x2e, 0x41, 0x43, 0x4b, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x09, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x08, 0x2e,
	0x42, 0x42, 0x43, 0x2e, 0x41, 0x43, 0x4b, 0x22, 0x00, 0x32, 0xc0, 0x01, 0x0a, 0x11, 0x51, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x08, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x41, 0x43, 0x4b, 0x22,
	0x00, 0x12, 0x25, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0a, 0x2e, 0x42, 0x42, 0x43, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x6f,
	0x73, 0x65, 0x12, 0x07, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x42, 0x42,
	0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x1e, 0x0a, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x09, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x1a,
	0x08, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x41, 0x43, 0x4b, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x05, 0x53,
	0x79, 0x6e, 0x63, 0x68, 0x12, 0x08, 0x2e, 0x42, 0x42, 0x43, 0x2e, 0x49, 0x44, 0x73, 0x1a, 0x0a,
	0x2e, 0x42, 0x42, 0x43, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02,
	0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_BBC_BBC_proto_rawDescOnce sync.Once
	file_BBC_BBC_proto_rawDescData = file_BBC_BBC_proto_rawDesc
)

func file_BBC_BBC_proto_rawDescGZIP() []byte {
	file_BBC_BBC_proto_rawDescOnce.Do(func() {
		file_BBC_BBC_proto_rawDescData = protoimpl.X.CompressGZIP(file_BBC_BBC_proto_rawDescData)
	})
	return file_BBC_BBC_proto_rawDescData
}

var file_BBC_BBC_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_BBC_BBC_proto_goTypes = []interface{}{
	(*Empty)(nil),      // 0: BBC.Empty
	(*ACK)(nil),        // 1: BBC.ACK
	(*Content)(nil),    // 2: BBC.Content
	(*Node)(nil),       // 3: BBC.Node
	(*Nodes)(nil),      // 4: BBC.Nodes
	(*IDs)(nil),        // 5: BBC.IDs
	(*ID)(nil),         // 6: BBC.ID
	(*ReadResult)(nil), // 7: BBC.ReadResult
}
var file_BBC_BBC_proto_depIdxs = []int32{
	3,  // 0: BBC.Nodes.Nodes:type_name -> BBC.Node
	2,  // 1: BBC.Bulletin.Post:input_type -> BBC.Content
	0,  // 2: BBC.Bulletin.Read:input_type -> BBC.Empty
	6,  // 3: BBC.Bulletin.Choose:input_type -> BBC.ID
	3,  // 4: BBC.Bulletin.Reply:input_type -> BBC.Node
	3,  // 5: BBC.Bulletin.Update:input_type -> BBC.Node
	2,  // 6: BBC.Primary.Post:input_type -> BBC.Content
	3,  // 7: BBC.Primary.Reply:input_type -> BBC.Node
	2,  // 8: BBC.Quorum.Post:input_type -> BBC.Content
	0,  // 9: BBC.Quorum.Read:input_type -> BBC.Empty
	6,  // 10: BBC.Quorum.Choose:input_type -> BBC.ID
	3,  // 11: BBC.Quorum.Reply:input_type -> BBC.Node
	3,  // 12: BBC.Quorum.Update:input_type -> BBC.Node
	2,  // 13: BBC.QuorumCoordinator.Post:input_type -> BBC.Content
	0,  // 14: BBC.QuorumCoordinator.Read:input_type -> BBC.Empty
	6,  // 15: BBC.QuorumCoordinator.Choose:input_type -> BBC.ID
	3,  // 16: BBC.QuorumCoordinator.Reply:input_type -> BBC.Node
	5,  // 17: BBC.QuorumCoordinator.Synch:input_type -> BBC.IDs
	1,  // 18: BBC.Bulletin.Post:output_type -> BBC.ACK
	7,  // 19: BBC.Bulletin.Read:output_type -> BBC.ReadResult
	2,  // 20: BBC.Bulletin.Choose:output_type -> BBC.Content
	1,  // 21: BBC.Bulletin.Reply:output_type -> BBC.ACK
	1,  // 22: BBC.Bulletin.Update:output_type -> BBC.ACK
	6,  // 23: BBC.Primary.Post:output_type -> BBC.ID
	6,  // 24: BBC.Primary.Reply:output_type -> BBC.ID
	1,  // 25: BBC.Quorum.Post:output_type -> BBC.ACK
	7,  // 26: BBC.Quorum.Read:output_type -> BBC.ReadResult
	2,  // 27: BBC.Quorum.Choose:output_type -> BBC.Content
	1,  // 28: BBC.Quorum.Reply:output_type -> BBC.ACK
	1,  // 29: BBC.Quorum.Update:output_type -> BBC.ACK
	1,  // 30: BBC.QuorumCoordinator.Post:output_type -> BBC.ACK
	7,  // 31: BBC.QuorumCoordinator.Read:output_type -> BBC.ReadResult
	2,  // 32: BBC.QuorumCoordinator.Choose:output_type -> BBC.Content
	1,  // 33: BBC.QuorumCoordinator.Reply:output_type -> BBC.ACK
	4,  // 34: BBC.QuorumCoordinator.Synch:output_type -> BBC.Nodes
	18, // [18:35] is the sub-list for method output_type
	1,  // [1:18] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_BBC_BBC_proto_init() }
func file_BBC_BBC_proto_init() {
	if File_BBC_BBC_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_BBC_BBC_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BBC_BBC_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BBC_BBC_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BBC_BBC_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BBC_BBC_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BBC_BBC_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BBC_BBC_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BBC_BBC_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_BBC_BBC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_BBC_BBC_proto_goTypes,
		DependencyIndexes: file_BBC_BBC_proto_depIdxs,
		MessageInfos:      file_BBC_BBC_proto_msgTypes,
	}.Build()
	File_BBC_BBC_proto = out.File
	file_BBC_BBC_proto_rawDesc = nil
	file_BBC_BBC_proto_goTypes = nil
	file_BBC_BBC_proto_depIdxs = nil
}
